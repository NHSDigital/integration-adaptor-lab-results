plugins {
	id 'org.springframework.boot' version '3.3.10'
	id 'io.spring.dependency-management' version '1.1.7'
	id 'java'
	id "io.freefair.lombok" version "8.13.1"
	id 'application'
	id 'jacoco'
	id 'checkstyle'
	id 'com.github.spotbugs' version '6.1.9'
	id 'idea'
}

group = 'uk.nhs.digital.nhsconnect'
version = '0.0.5-SNAPSHOT'
sourceCompatibility = '21'

mainClassName = 'uk.nhs.digital.nhsconnect.lab.results.IntegrationAdapterLabResultsApplication'

sourceSets {
	intTest {
		compileClasspath += sourceSets.main.output
		runtimeClasspath += sourceSets.main.output
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
	intTestImplementation.extendsFrom implementation
	intTestImplementation.extendsFrom testImplementation
	intTestRuntimeOnly.extendsFrom runtimeOnly
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter'
	implementation 'org.springframework:spring-jms'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.apache.httpcomponents:httpclient:4.5.13'
    implementation 'org.apache.qpid:qpid-jms-client:2.7.0'
    implementation 'com.heroku.sdk:env-keystore:1.1.6'
    implementation "commons-codec:commons-codec:1.7"
	implementation 'com.amazonaws:aws-java-sdk-s3:1.12.782'
	implementation 'ca.uhn.hapi.fhir:hapi-fhir-base:7.6.1'
	implementation 'ca.uhn.hapi.fhir:hapi-fhir-structures-dstu3:7.6.1'
	implementation 'com.github.spullara.mustache.java:compiler:0.9.14'
	implementation 'ch.qos.logback.contrib:logback-jackson:0.1.5'
	implementation 'ch.qos.logback.contrib:logback-json-classic:0.1.5'

	implementation 'org.projectlombok:lombok'
	testImplementation 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testAnnotationProcessor 'org.projectlombok:lombok'

	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}

	testImplementation 'org.testcontainers:testcontainers:1.20.6'
	testImplementation 'org.awaitility:awaitility:4.0.3'
	testImplementation "org.junit.jupiter:junit-jupiter-params"
    testImplementation 'org.assertj:assertj-core'
	testImplementation 'org.junit.platform:junit-platform-commons'

	compileOnly group: 'com.github.spotbugs', name: 'spotbugs-annotations', version: '4.9.3'
}

test {
	useJUnitPlatform()
}

jacocoTestReport {
	dependsOn test // tests are required to run before generating the report
}

task integrationTest(type: Test) {
	useJUnitPlatform() {
		description = 'Runs integration tests.'
		group = 'verification'

		testClassesDirs = sourceSets.intTest.output.classesDirs
		classpath = sourceSets.intTest.runtimeClasspath
		shouldRunAfter test
	}
}

check.dependsOn integrationTest

spotbugsTest.enabled = false
spotbugsIntTest.enabled = false
spotbugsMain {
	reports {
		html {
			enabled = false
		}
		xml {
			enabled = true
		}
	}
}

spotbugs {
	excludeFilter = file("${rootDir}/config/spotbugs/exclude.xml")
}

checkstyle {
	configFile = file("${rootDir}/config/checkstyle/checkstyle.xml")
}

idea {
	module {
		testSourceDirs += file('src/intTest/java')
	}
}
