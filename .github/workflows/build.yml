name: "Build"
on:
  pull_request:
    types: [opened, synchronize, reopened]
    branches:
      - main
  push:
    branches:
      - main

jobs:
  generate-build-id:
    name: "Generate Build Id"
    runs-on: ubuntu-latest
    outputs:
      build-id: ${{ steps.generate.outputs.buildId }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - id: generate
        working-directory: ./scripts
        shell: bash
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          chmod +x ./create_build_id.sh

          if [[ "${{ github.event_name }}" == "pull_request" ]]; then
          GIT_BRANCH=PR
          elif [[ "${{ github.event_name }}" == "push" && "${{ github.ref }}" == "refs/heads/main" ]]; then
          GIT_BRANCH=main
          fi

          BUILD_ID=$(./create_build_id.sh $GIT_BRANCH ${{ github.event.number }} ${{ github.run_number }} ${{ github.sha }})
          echo "Generated the build tag: $BUILD_ID"
          echo "buildId=$BUILD_ID" >> "$GITHUB_OUTPUT" 

  tests:
    name: "Tests"
    needs: [ generate-build-id ]
    uses: ./.github/workflows/test.yml
    with:
      name: Lab Results Adaptor
      path: ./
      build-id: ${{ needs.generate-build-id.outputs.build-id }}
    secrets: inherit

#  publish-docker-images:
#    name: "Publish docker images to ECR"
#    needs: [ generate-build-id ]
#    strategy:
#      matrix:
#        config:
#          - directory: .
#            repository: lab-results
#            build-context: .
#    uses: ./.github/workflows/publish.yml
#    with:
#      directory: ${{ matrix.config.directory }}
#      repository: ${{ matrix.config.repository }}
#      build-context: ${{ matrix.config.build-context }}
#      build-id: ${{ needs.generate-build-id.outputs.build-id }}
#    secrets: inherit

#  comment:
#    if: github.event_name == 'pull_request'
#    name: "Create Build ID Comment"
#    needs: [ generate-build-id, publish-docker-images ]
#    continue-on-error: true
#    permissions: write-all
#    runs-on: [ ubuntu-latest ]
#    steps:
#      - name: Check out code
#        uses: actions/checkout@v4
#      - name: Comment PR
#        uses: thollander/actions-comment-pull-request@v3
#        with:
#          message: |
#            Images built and published to ECR using a Build Id of ${{ needs.generate-build-id.outputs.build-id }}
#          comment_tag: images-built
#          mode: upsert

